* Динамическое программирование применяется при оптимизации не­которой характеристики.

* Динамическое программирование работает только в ситуациях, в кото­рых задача может быть разбита на 
автономные подзадачи.

* В каждом решении из области динамического программирования строится таблица.

* Значения ячеек таблицы обычно соответствуют оптимизируемой харак­теристике.

* Каждая ячейка представляет подзадачу, поэтому вы должны подумать о том, как разбить задачу на подзадачи.

* Не существует единой формулы для вычисления решений методом ди­намического программирования.

* В решении, полученном методом динамического програм­мирования, вы либо берете предмет, либо не берете. 
Алгоритм не преду­сматривает возможность взять половину предмета.

* Динамическое программирование работает толъко в том случае, если каждая подзадача автономна, 
то естъ не зависит от других подзадач.

* Биологи используют самую длинную общую подпоследовательность для выявления сходства в цепях ДНК. 
По этой метрике можно судить о сходстве двух видов животных, двух заболеваний и т. д. 
Самая длинная общая подпоследовательность используется для поиска лекарства от рассеянного склероза.

* Вы когда-нибудь пользовались ключом diff (например, в команде git diff)? Этот ключ выводит информацию 
о различиях между двумя фай­лами, а для этого он использует динамическое программирование.

* Мы также упоминали о сходстве строк. Расстояние Левенштейна оцени­вает, насколько похожи две строки, 
а для его вычисления применяется динамическое программирование. Расстояние Левенштейна использу­ется 
в самых разных областях, от проверки орфографии до выявления отправки пользователем данных, 
защищенных авторским правом.

* Вы когда-нибудь работали в приложении, поддерживающем перенос слов, например Microsoft Word? 
Как определить, где следует расставить переносы, чтобы длина строки оставалась более или менее постоянной? 
Динамическое программирование!