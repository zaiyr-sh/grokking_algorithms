* Хеш-таблица создается объединением хеш-функции с массивом.

* Хеш-функция должна быть последовательной. Допустим, вы передали ей стро­ку «апельсины» и получили 4. 
Это значит, что каждый раз в будущем, передавая ей строку «апельсины», вы будете получать 4. 
Без этого хеш­ таблица бесполезна.

* Разным словам должны соответствовать разные числа. Например, хеш­ функция, которая возвращает 1 
для каждого полученного слова, никуда не годится. В идеале каждое входное слово должно отображаться на свое число.

* Хеш-функция неизменно связывает название с одним индексом. Каждый раз, когда она вызывается для строки «авокадо», 
вы получаете обратно одно и то же число. При первом вызове этой функции вы узнаете, где следует сохранить цену 
авокадо, а при последующих вызовах она со­общает, где взять эту цену.

* Хеш-функция связывает разные строки с разными индексами. «Авока­до» связывается с индексом 4, а «молоко» - 
с индексом О. Для каждой строки находится отдельная позиция массива, в которой сохраняется цена этого товара.

* Хеш-функция знает размер массива и возвращает только действитель­ные индексы. Таким образом, если длина массива 
равна 5 элементам, хеш-функция не вернет 100, потому что это значение не является дей­ствительным индексом в массиве.

* Хеш-таблицы также известны под другими названиями: «ассоциативные массивы», «словари», «отображения», 
«хеш­-карты» или просто «хеши».

* Хеши хорошо подходят для моделирование отношений между объектами;

* Хеши хорошо подходят для устранение дубликатов;

* Хеши хорошо подходят для кэширование/запоминание данных вместо выполнения работы на сер­вере.

* Выбор хеш-функции действительно важен. Хеш-функция, отображаю­щая все ключи на один элемент массива, 
никуда не годится. В идеале хеш-функция должна распределять ключи равномерно по всему хешу;

* Если связанные списки становятся слишком длинными, работа с хеш-таблицей сильно замедляется. 
Но они не станут слишком длинными при использовании хорошей хеш-функции!

* Коллизия: двум ключам назначается один элемент массива.

* Коллизии нежелательны. Хеш-функция должна свести количество кол­лизий к минимуму.

* Для предотвращения коллизий необходимы низкий коэффициент заполнения и хорошая хеш-функция.

* Хеш-таблицы обеспечивают очень быстрое выполнение поиска, вставки и удаления.

* Коэффициент заполнения хеш-таблицы = кол-во элементов в хеш-таблице / общее кол-во элементов.

* Хорошее приближенное правило: изменяйте размер хеш-таблицы, когда коэффициент заполнения превышает 0,7.